generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:fatec@localhost:3306/atv5"
}

model Telefone {
  id        Int     @id @default(autoincrement())
  ddd       String
  numero    String
  cliente   Cliente @relation(fields: [clienteId], references: [id])
  clienteId Int
}

model Servico {
  id              Int              @id @default(autoincrement())
  nome            String
  valor           Float
  raca            String
  tipo            String // Pode precisar de refinamento dependendo do contexto
  vezesConsumidas Int              @default(0)
  clientes        ClienteServico[] // Relação inversa com ClienteServico
}

model RG {
  valor       String
  dataEmissao DateTime
  cliente     Cliente  @relation(fields: [clienteId], references: [id])
  clienteId   Int

  @@id([valor, clienteId])
}

model Produto {
  id              Int              @id @default(autoincrement())
  nome            String
  valor           Float
  raca            String
  tipo            String // Pode precisar de refinamento dependendo do contexto
  vezesConsumidas Int              @default(0)
  clientes        ClienteProduto[] // Relação inversa com ClienteProduto
}

model CPF {
  valor       String
  dataEmissao DateTime
  cliente     Cliente  @relation(fields: [clienteId], references: [id])
  clienteId   Int      @unique

  @@id([valor])
}

model Cliente {
  id                 Int              @id @default(autoincrement())
  nome               String
  nomeSocial         String
  dataCadastro       DateTime?        @default(now())
  telefones          Telefone[]
  rgs                RG[]
  cpf                CPF?
  produtosConsumidos ClienteProduto[]
  servicosConsumidos ClienteServico[]
  pets               Pet[]
  valorConsumido     Int              @default(0)
  vezesConsumida     Int              @default(0)
}

model Pet {
  id        Int     @id @default(autoincrement())
  nome      String
  tipo      String
  raca      String
  genero    String
  cliente   Cliente @relation(fields: [clienteId], references: [id])
  clienteId Int

}

model ClienteProduto {
  id         Int      @id @default(autoincrement())
  cliente    Cliente  @relation(fields: [clienteId], references: [id])
  clienteId  Int
  produto    Produto  @relation(fields: [produtoId], references: [id])
  produtoId  Int
  quantidade Int
  dataCompra DateTime @default(now())

  @@unique([clienteId, produtoId])
}


model ClienteServico {
  id              Int      @id @default(autoincrement())
  cliente         Cliente  @relation(fields: [clienteId], references: [id])
  clienteId       Int
  servico         Servico  @relation(fields: [servicoId], references: [id])
  servicoId       Int
  nomeDoPet       String 
  dataContratacao DateTime @default(now())

  @@unique([clienteId, servicoId])
}
